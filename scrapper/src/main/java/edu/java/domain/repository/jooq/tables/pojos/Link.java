/*
 * This file is generated by jOOQ.
 */

package edu.java.domain.repository.jooq.tables.pojos;

import jakarta.validation.constraints.Size;
import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.LocalDateTime;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class Link implements Serializable {

    private static final long serialVersionUID = 1L;

    private String url;
    private Integer starCount;
    private Integer answerCount;
    private LocalDateTime updatedDate;
    private LocalDateTime checkedDate;

    public Link() {
    }

    public Link(Link value) {
        this.url = value.url;
        this.starCount = value.starCount;
        this.answerCount = value.answerCount;
        this.updatedDate = value.updatedDate;
        this.checkedDate = value.checkedDate;
    }

    @ConstructorProperties({"url", "starCount", "answerCount", "updatedDate", "checkedDate"})
    public Link(
        @NotNull String url,
        @Nullable Integer starCount,
        @Nullable Integer answerCount,
        @NotNull LocalDateTime updatedDate,
        @NotNull LocalDateTime checkedDate
    ) {
        this.url = url;
        this.starCount = starCount;
        this.answerCount = answerCount;
        this.updatedDate = updatedDate;
        this.checkedDate = checkedDate;
    }

    /**
     * Getter for <code>LINK.URL</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 1000000000)
    @NotNull
    public String getUrl() {
        return this.url;
    }

    /**
     * Setter for <code>LINK.URL</code>.
     */
    public void setUrl(@NotNull String url) {
        this.url = url;
    }

    /**
     * Getter for <code>LINK.STAR_COUNT</code>.
     */
    @Nullable
    public Integer getStarCount() {
        return this.starCount;
    }

    /**
     * Setter for <code>LINK.STAR_COUNT</code>.
     */
    public void setStarCount(@Nullable Integer starCount) {
        this.starCount = starCount;
    }

    /**
     * Getter for <code>LINK.ANSWER_COUNT</code>.
     */
    @Nullable
    public Integer getAnswerCount() {
        return this.answerCount;
    }

    /**
     * Setter for <code>LINK.ANSWER_COUNT</code>.
     */
    public void setAnswerCount(@Nullable Integer answerCount) {
        this.answerCount = answerCount;
    }

    /**
     * Getter for <code>LINK.UPDATED_DATE</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public LocalDateTime getUpdatedDate() {
        return this.updatedDate;
    }

    /**
     * Setter for <code>LINK.UPDATED_DATE</code>.
     */
    public void setUpdatedDate(@NotNull LocalDateTime updatedDate) {
        this.updatedDate = updatedDate;
    }

    /**
     * Getter for <code>LINK.CHECKED_DATE</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public LocalDateTime getCheckedDate() {
        return this.checkedDate;
    }

    /**
     * Setter for <code>LINK.CHECKED_DATE</code>.
     */
    public void setCheckedDate(@NotNull LocalDateTime checkedDate) {
        this.checkedDate = checkedDate;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Link other = (Link) obj;
        if (this.url == null) {
            if (other.url != null) {
                return false;
            }
        } else if (!this.url.equals(other.url)) {
            return false;
        }
        if (this.starCount == null) {
            if (other.starCount != null) {
                return false;
            }
        } else if (!this.starCount.equals(other.starCount)) {
            return false;
        }
        if (this.answerCount == null) {
            if (other.answerCount != null) {
                return false;
            }
        } else if (!this.answerCount.equals(other.answerCount)) {
            return false;
        }
        if (this.updatedDate == null) {
            if (other.updatedDate != null) {
                return false;
            }
        } else if (!this.updatedDate.equals(other.updatedDate)) {
            return false;
        }
        if (this.checkedDate == null) {
            if (other.checkedDate != null) {
                return false;
            }
        } else if (!this.checkedDate.equals(other.checkedDate)) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.url == null) ? 0 : this.url.hashCode());
        result = prime * result + ((this.starCount == null) ? 0 : this.starCount.hashCode());
        result = prime * result + ((this.answerCount == null) ? 0 : this.answerCount.hashCode());
        result = prime * result + ((this.updatedDate == null) ? 0 : this.updatedDate.hashCode());
        result = prime * result + ((this.checkedDate == null) ? 0 : this.checkedDate.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Link (");

        sb.append(url);
        sb.append(", ").append(starCount);
        sb.append(", ").append(answerCount);
        sb.append(", ").append(updatedDate);
        sb.append(", ").append(checkedDate);

        sb.append(")");
        return sb.toString();
    }
}
